{"version":3,"sources":["./src/app/modules/material.module.ts","./src/app/components/guest-book/guest-book.actions.ts","./src/environments/environment.ts","./src/app/services/post.service.ts","./src/app/components/guest-book/guest-book.reducer.ts","./src/app/components/post-detailed/post-detailed.component.ts","./src/app/components/post-detailed/post-detailed.component.html","./src/app/components/guest-book-record/guest-book-record.component.ts","./src/app/components/guest-book-record/guest-book-record.component.html","./src/app/components/user-profile-dialog/user-profile-dialog.component.ts","./src/app/components/user-profile-dialog/user-profile-dialog.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/post/post.component.ts","./src/app/components/post/post.component.html","./src/app/app.module.ts","./src/app/components/guest-book/guest-book.component.ts","./src/app/components/guest-book/guest-book.component.html","./src/app/components/comment/comment.component.html","./src/app/components/comment/comment.component.ts","./src/app/constants.ts","./src/app/components/blog-posts/blog-posts.component.ts","./src/app/components/blog-posts/blog-posts.component.html","./src/app/utils/common.ts","./src/app/components/guest-book-form/guest-book-form.component.ts","./src/app/components/guest-book-form/guest-book-form.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@NgModule({\n  exports: [\n    MatToolbarModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatExpansionModule,\n    MatProgressSpinnerModule,\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class MaterialModule {}\n","import { createAction, props } from '@ngrx/store';\nimport { GuestBookRecord } from '../../types';\n\nexport const addRecord = createAction(\n  '[Guest Book] Add Record',\n  props<{ record: GuestBookRecord }>()\n);\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Post, PostComment } from '../types';\n\nconst MAIN_LINK = 'https://jsonplaceholder.typicode.com';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PostService {\n  constructor(private http: HttpClient) {}\n\n  getAllPosts(): Observable<Post[]> {\n    const url = `${MAIN_LINK}/posts`;\n    return this.http.get<Post[]>(url);\n  }\n\n  getPost(id: number): Observable<Post> {\n    const url = `${MAIN_LINK}/posts/${id}`;\n    return this.http.get<Post>(url);\n  }\n\n  getPostComments(id: number): Observable<PostComment[]> {\n    const url = `${MAIN_LINK}/posts/${id}/comments`;\n    return this.http.get<PostComment[]>(url);\n  }\n}\n","import { Action, createReducer, on } from '@ngrx/store';\nimport { addRecord } from './guest-book.actions';\nimport { GuestBookRecord } from '../../types';\n\nexport const initialState: GuestBookRecord[] = [\n  {\n    user: {\n      id: 1,\n      name: 'Leanne Graham',\n      username: 'Bret',\n      email: 'Sincere@april.biz',\n      address: {\n        street: 'Kulas Light',\n        suite: 'Apt. 556',\n        city: 'Gwenborough',\n        zipcode: '92998-3874',\n      },\n      phone: '1-770-736-8031 x56442',\n      website: 'hildegard.org',\n    },\n    message: 'Face to face bifurcated interface',\n  },\n  {\n    user: {\n      id: 2,\n      name: 'Ervin Howell',\n      username: 'Antonette',\n      email: 'Shanna@melissa.tv',\n      address: {\n        street: 'Victor Plains',\n        suite: 'Suite 879',\n        city: 'Wisokyburgh',\n        zipcode: '90566-7771',\n      },\n      phone: '010-692-6593 x09125',\n      website: 'anastasia.net',\n    },\n    message: 'Face to face bifurcated interface',\n  },\n  {\n    user: {\n      id: 3,\n      name: 'Clementine Bauch',\n      username: 'Samantha',\n      email: 'Nathan@yesenia.net',\n      address: {\n        street: 'Douglas Extension',\n        suite: 'Suite 847',\n        city: 'McKenziehaven',\n        zipcode: '59590-4157',\n      },\n      phone: '1-463-123-4447',\n      website: 'ramiro.info',\n    },\n    message: 'Face to face bifurcated interface',\n  },\n];\n\nconst _guestBookReducer = createReducer(\n  initialState,\n  on(addRecord, (state: GuestBookRecord[], { record }) => [record, ...state])\n);\n\nexport function guestBookReducer(\n  state: GuestBookRecord[] | undefined,\n  action: Action\n): GuestBookRecord[] {\n  return _guestBookReducer(state, action);\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Post, PostComment } from '../../types';\nimport { PostService } from '../../services/post.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-post-detailed',\n  templateUrl: './post-detailed.component.html',\n  styleUrls: ['./post-detailed.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostDetailedComponent implements OnInit {\n  post$ = new BehaviorSubject<Post | null>(null);\n  loadingPost$ = new BehaviorSubject(true);\n  loadingPostError$ = new BehaviorSubject(false);\n  comments$ = new BehaviorSubject<PostComment[]>([]);\n  loadingComments$ = new BehaviorSubject(true);\n  loadingCommentsError$ = new BehaviorSubject(false);\n\n  constructor(\n    private actualRouter: ActivatedRoute,\n    private postService: PostService\n  ) {}\n\n  ngOnInit(): void {\n    const id = this.actualRouter.snapshot.params.id;\n    this.loadPost(id);\n    this.loadComments(id);\n  }\n\n  loadPost(id: number): void {\n    this.loadingPost$.next(true);\n    this.loadingPostError$.next(false);\n    this.postService\n      .getPost(id)\n      .pipe(\n        finalize(() => {\n          this.loadingPost$.next(false);\n        })\n      )\n      .subscribe(\n        (data: Post) => {\n          this.loadingPost$.next(false);\n          this.post$.next(data);\n        },\n        () => {\n          this.loadingPost$.next(false);\n          this.loadingPostError$.next(true);\n        }\n      );\n  }\n\n  loadComments(id: number): void {\n    this.loadingComments$.next(true);\n    this.loadingCommentsError$.next(false);\n    this.postService.getPostComments(id).subscribe(\n      (data: PostComment[]) => {\n        this.loadingComments$.next(false);\n        this.comments$.next(data);\n      },\n      () => {\n        this.loadingComments$.next(false);\n        this.loadingCommentsError$.next(true);\n      }\n    );\n  }\n}\n","<div class=\"post\">\n  <div *ngIf=\"loadingPost$ | async\" class=\"spinner-container\">\n    <mat-spinner></mat-spinner>\n  </div>\n  <div *ngIf=\"loadingPostError$ | async\" class=\"error-msg\">\n    Could not load post data\n  </div>\n  <app-post\n    *ngIf=\"post$ | async\"\n    [data]=\"post$ | async\"\n    [showActions]=\"false\"\n  ></app-post>\n</div>\n\n<div class=\"comments\">\n  <div class=\"title\">Comments:</div>\n  <div *ngIf=\"loadingComments$ | async\" class=\"spinner-container\">\n    <mat-spinner></mat-spinner>\n  </div>\n  <div *ngIf=\"loadingCommentsError$ | async\" class=\"error-msg\">\n    Could not load post comments\n  </div>\n  <div class=\"comment\" *ngFor=\"let comment of comments$ | async\">\n    <app-comment [comment]=\"comment\"></app-comment>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { User } from '../../types';\nimport { getUserAvatar } from '../../utils/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { UserProfileDialogComponent } from '../user-profile-dialog/user-profile-dialog.component';\n\n@Component({\n  selector: 'app-guest-book-record',\n  templateUrl: './guest-book-record.component.html',\n  styleUrls: ['./guest-book-record.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GuestBookRecordComponent implements OnInit {\n  @Input() user?: User;\n  @Input() message?: string;\n\n  constructor(private dialog: MatDialog) {}\n\n  ngOnInit(): void {}\n\n  getAvatar(): string {\n    return this.user ? getUserAvatar(this.user.email) : '';\n  }\n\n  openUserProfileDialog(): void {\n    this.dialog.open(UserProfileDialogComponent, {\n      data: this.user,\n    });\n  }\n}\n","<mat-card *ngIf=\"user && message\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"avatar\" (click)=\"openUserProfileDialog()\">\n      <img alt=\"img\" [src]=\"getAvatar()\" />\n    </div>\n    <mat-card-title>{{ user.username }} ({{ user.name }})</mat-card-title>\n    <mat-card-subtitle>{{ user.address.city }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>{{ message }}</mat-card-content>\n</mat-card>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  OnInit,\n} from '@angular/core';\nimport { User } from '../../types';\nimport { getUserAvatar } from '../../utils/common';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-user-profile-dialog',\n  templateUrl: './user-profile-dialog.component.html',\n  styleUrls: ['./user-profile-dialog.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class UserProfileDialogComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public user?: User) {}\n\n  ngOnInit(): void {}\n\n  getAvatar(): string {\n    return this.user ? getUserAvatar(this.user.email, 80) : '';\n  }\n}\n","<ng-container *ngIf=\"user\">\n  <div class=\"wrapper\">\n    <h2>{{ user.username }}'s Profile</h2>\n    <div>\n      <img alt=\"img\" [src]=\"getAvatar()\" />\n    </div>\n    <mat-dialog-content>\n      <mat-card-content>\n        <div>Full name: {{ user.name }}</div>\n        <div>From: {{ user.address.city }}</div>\n        <div>E-mail: {{ user.email }}</div>\n        <div>Phone: {{ user.phone }}</div>\n        <div>Website: {{ user.website }}</div>\n      </mat-card-content>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n      <button mat-button mat-dialog-close>Close</button>\n    </mat-dialog-actions>\n  </div>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n} from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { BLOG_POSTS_ROUTE, GUEST_BOOK_ROUTE } from './constants';\n\ninterface NavItem {\n  url: string;\n  label: string;\n}\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  navItems: NavItem[] = [\n    {\n      url: BLOG_POSTS_ROUTE,\n      label: 'Blog Posts',\n    },\n    {\n      url: GUEST_BOOK_ROUTE,\n      label: 'Guest book',\n    },\n  ];\n\n  private mobileQueryListener: () => void;\n\n  constructor(changeDetectorRef: ChangeDetectorRef, media: MediaMatcher) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this.mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this.mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this.mobileQueryListener);\n  }\n}\n","<div class=\"app-container\" [class.example-is-mobile]=\"mobileQuery.matches\">\n  <mat-toolbar color=\"primary\">\n    <button\n      mat-icon-button\n      aria-label=\"Example icon-button with menu icon\"\n      (click)=\"sideNav.toggle()\"\n    >\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>My App</span>\n  </mat-toolbar>\n  <mat-sidenav-container\n    class=\"sidenav-container\"\n    [style.marginTop.px]=\"mobileQuery.matches ? 56 : 0\"\n  >\n    <mat-sidenav\n      #sideNav\n      [mode]=\"mobileQuery.matches ? 'over' : 'side'\"\n      [fixedInViewport]=\"mobileQuery.matches\"\n      fixedTopGap=\"56\"\n    >\n      <mat-nav-list>\n        <a\n          mat-list-item\n          routerLinkActive=\"active-nav-item\"\n          [routerLinkActiveOptions]=\"{ exact: true }\"\n          [routerLink]=\"nav.url\"\n          *ngFor=\"let nav of navItems\"\n          >{{ nav.label }}</a\n        >\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <mat-sidenav-content class=\"sidenav-content\">\n      <div class=\"main-content\">\n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Post } from '../../types';\nimport { Router } from '@angular/router';\nimport { BLOG_POSTS_ROUTE } from '../../constants';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PostComponent {\n  @Input() data: Post | null = null;\n  @Input() showActions = true;\n\n  constructor(private router: Router) {}\n\n  onCommentClick(): void {\n    this.router.navigate([BLOG_POSTS_ROUTE, this.data?.id]);\n  }\n}\n","<mat-card class=\"post\" *ngIf=\"data\">\n  <mat-card-header class=\"post-header\">\n    <mat-card-title>\n      {{ data.title }}\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content class=\"post-content\">\n    {{ data.body }}\n  </mat-card-content>\n  <mat-card-actions *ngIf=\"showActions\" [align]=\"'end'\">\n    <button mat-icon-button (click)=\"onCommentClick()\">\n      <mat-icon>comment</mat-icon>\n    </button>\n  </mat-card-actions>\n</mat-card>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BlogPostsComponent } from './components/blog-posts/blog-posts.component';\nimport { GuestBookComponent } from './components/guest-book/guest-book.component';\nimport { PostComponent } from './components/post/post.component';\nimport { PostDetailedComponent } from './components/post-detailed/post-detailed.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommentComponent } from './components/comment/comment.component';\nimport { GuestBookRecordComponent } from './components/guest-book-record/guest-book-record.component';\nimport { GuestBookFormComponent } from './components/guest-book-form/guest-book-form.component';\nimport { UserProfileDialogComponent } from './components/user-profile-dialog/user-profile-dialog.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { guestBookReducer } from './components/guest-book/guest-book.reducer';\nimport { MaterialModule } from './modules/material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BlogPostsComponent,\n    GuestBookComponent,\n    PostComponent,\n    PostDetailedComponent,\n    CommentComponent,\n    GuestBookRecordComponent,\n    GuestBookFormComponent,\n    UserProfileDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    StoreModule.forRoot({ guestBook: guestBookReducer }),\n    BrowserAnimationsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MaterialModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class AppModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { GuestBookRecord, StoreContent } from '../../types';\nimport { Observable } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { addRecord } from './guest-book.actions';\n\n@Component({\n  selector: 'app-guest-book',\n  templateUrl: './guest-book.component.html',\n  styleUrls: ['./guest-book.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GuestBookComponent {\n  records$: Observable<GuestBookRecord[]>;\n\n  constructor(private store: Store<StoreContent>) {\n    this.records$ = store.select('guestBook');\n  }\n\n  onAddRecord(record: GuestBookRecord): void {\n    this.store.dispatch(addRecord({ record }));\n    // http call to server\n  }\n}\n","<div class=\"guest-book-form-wrapper\">\n  <app-guest-book-form (addRecord)=\"onAddRecord($event)\"> </app-guest-book-form>\n</div>\n<div *ngFor=\"let record of records$ | async\" class=\"guest-book-record-wrapper\">\n  <app-guest-book-record\n    [user]=\"record.user\"\n    [message]=\"record.message\"\n  ></app-guest-book-record>\n</div>\n","<mat-card *ngIf=\"comment\">\n  <mat-card-header>\n    <mat-card-title>{{ comment.name }}</mat-card-title>\n    <mat-card-subtitle>{{ comment.email }}</mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    {{ comment.body }}\n  </mat-card-content>\n</mat-card>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { PostComment } from '../../types';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CommentComponent implements OnInit {\n  @Input() comment?: PostComment;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","export const BLOG_POSTS_ROUTE = 'posts';\nexport const GUEST_BOOK_ROUTE = 'guest-book';\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { PostService } from '../../services/post.service';\nimport { Post } from '../../types';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-blog-posts',\n  templateUrl: './blog-posts.component.html',\n  styleUrls: ['./blog-posts.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BlogPostsComponent implements OnInit {\n  posts$ = new BehaviorSubject<Post[]>([]);\n  loading$ = new BehaviorSubject(true);\n  error$ = new BehaviorSubject(false);\n  constructor(private postService: PostService) {}\n\n  ngOnInit(): void {\n    this.retrieveAllPosts();\n  }\n\n  retrieveAllPosts(): void {\n    this.loading$.next(true);\n    this.error$.next(false);\n    this.postService.getAllPosts().subscribe(\n      (data: Post[]) => {\n        this.loading$.next(false);\n        this.posts$.next(data);\n      },\n      () => {\n        this.loading$.next(false);\n        this.error$.next(true);\n      }\n    );\n  }\n}\n","<div *ngIf=\"loading$ | async\" class=\"spinner-container\">\n  <mat-spinner></mat-spinner>\n</div>\n\n<div *ngIf=\"error$ | async\" class=\"error-msg\">Could not load blog posts</div>\n\n<div class=\"blog-posts\">\n  <app-post *ngFor=\"let post of posts$ | async\" [data]=\"post\"> </app-post>\n</div>\n","import * as md5 from 'md5';\n\nexport function getUserAvatar(email: string, size = 40): string {\n  return `https://www.gravatar.com/avatar/${md5(\n    email.trim().toLowerCase()\n  )}?s=${size}`;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Output,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { GuestBookRecord } from '../../types';\n\n@Component({\n  selector: 'app-guest-book-form',\n  templateUrl: './guest-book-form.component.html',\n  styleUrls: ['./guest-book-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GuestBookFormComponent {\n  @Output() addRecord = new EventEmitter<GuestBookRecord>();\n\n  formGroup: FormGroup;\n  username = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.required, Validators.email]);\n  name = new FormControl('');\n  city = new FormControl('');\n  phone = new FormControl('');\n  website = new FormControl('');\n  message = new FormControl('', [\n    Validators.required,\n    Validators.minLength(20),\n  ]);\n\n  constructor() {\n    this.formGroup = new FormGroup({\n      message: this.message,\n      website: this.website,\n      phone: this.phone,\n      email: this.email,\n      name: this.name,\n      username: this.username,\n      city: this.city,\n    });\n  }\n\n  onAddRecord(): void {\n    this.formGroup.updateValueAndValidity();\n\n    if (this.formGroup.valid) {\n      this.addRecord.emit({\n        message: this.message.value,\n        user: {\n          website: this.website.value,\n          phone: this.phone.value,\n          email: this.email.value,\n          name: this.name.value,\n          username: this.username.value,\n          address: {\n            city: this.city.value,\n            street: '',\n            suite: '',\n            zipcode: '',\n          },\n        },\n      });\n    }\n  }\n}\n","<mat-expansion-panel>\n  <mat-expansion-panel-header>\n    <mat-panel-title> Feedback form </mat-panel-title>\n    <mat-panel-description> Click to open </mat-panel-description>\n  </mat-expansion-panel-header>\n  <form [formGroup]=\"formGroup\" autocomplete=\"off\">\n    <div class=\"fields-wrapper\">\n      <mat-form-field>\n        <mat-label>Username</mat-label>\n        <input type=\"text\" matInput [formControl]=\"username\" />\n        <mat-error *ngIf=\"username.hasError('required')\">\n          Username is required\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Email</mat-label>\n        <input type=\"email\" matInput [formControl]=\"email\" />\n        <mat-error\n          *ngIf=\"email.hasError('email') && !email.hasError('required')\"\n        >\n          Please enter a valid email address\n        </mat-error>\n        <mat-error *ngIf=\"email.hasError('required')\">\n          Email is required\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Name</mat-label>\n        <input type=\"text\" matInput [formControl]=\"name\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>City</mat-label>\n        <input type=\"text\" matInput [formControl]=\"city\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Phone</mat-label>\n        <input type=\"text\" matInput [formControl]=\"phone\" />\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Website</mat-label>\n        <input type=\"text\" matInput [formControl]=\"website\" />\n      </mat-form-field>\n    </div>\n    <mat-form-field class=\"message-field\">\n      <mat-label>Message</mat-label>\n      <textarea type=\"text\" matInput [formControl]=\"message\"></textarea>\n      <mat-error\n        *ngIf=\"message.hasError('required') || message.hasError('minlength')\"\n      >\n        Message should contain at least 20 characters\n      </mat-error>\n    </mat-form-field>\n    <div class=\"actions\">\n      <button\n        type=\"submit\"\n        (click)=\"onAddRecord()\"\n        mat-raised-button\n        color=\"primary\"\n      >\n        Add record\n      </button>\n    </div>\n  </form>\n</mat-expansion-panel>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BlogPostsComponent } from './components/blog-posts/blog-posts.component';\nimport { GuestBookComponent } from './components/guest-book/guest-book.component';\nimport { BLOG_POSTS_ROUTE, GUEST_BOOK_ROUTE } from './constants';\nimport { PostDetailedComponent } from './components/post-detailed/post-detailed.component';\n\nconst routes: Routes = [\n  {\n    path: BLOG_POSTS_ROUTE,\n    component: BlogPostsComponent,\n  },\n  {\n    path: GUEST_BOOK_ROUTE,\n    component: GuestBookComponent,\n  },\n  {\n    path: `${BLOG_POSTS_ROUTE}/:id`,\n    component: PostDetailedComponent,\n  },\n  { path: '', pathMatch: 'full', redirectTo: BLOG_POSTS_ROUTE },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}